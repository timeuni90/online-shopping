<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.timeuni.dao.AddressDetailMapper">
	<resultMap id="BaseResultMap"
		type="com.timeuni.bean.AddressDetail">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="user_id" jdbcType="INTEGER" property="userId" />
		<result column="area_id" jdbcType="VARCHAR" property="areaId" />
		<result column="detail_address" jdbcType="VARCHAR"
			property="detailAddress" />
		<result column="receiver" jdbcType="VARCHAR"
			property="receiver" />
		<result column="phone_number" jdbcType="VARCHAR"
			property="phoneNumber" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, user_id, area_id, detail_address, receiver,
		phone_number
	</sql>
	<select id="selectByExample"
		parameterType="com.timeuni.bean.AddressDetailExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from tb_address_detail
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from tb_address_detail
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from tb_address_detail
		where id =
		#{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.timeuni.bean.AddressDetailExample">
		delete from tb_address_detail
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert"
		parameterType="com.timeuni.bean.AddressDetail">
		insert into tb_address_detail (id, user_id, area_id,
		detail_address, receiver, phone_number
		)
		values (#{id,jdbcType=INTEGER},
		#{userId,jdbcType=INTEGER},
		#{areaId,jdbcType=VARCHAR},
		#{detailAddress,jdbcType=VARCHAR}, #{receiver,jdbcType=VARCHAR},
		#{phoneNumber,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="com.timeuni.bean.AddressDetail">
		insert into tb_address_detail
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="areaId != null">
				area_id,
			</if>
			<if test="detailAddress != null">
				detail_address,
			</if>
			<if test="receiver != null">
				receiver,
			</if>
			<if test="phoneNumber != null">
				phone_number,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="areaId != null">
				#{areaId,jdbcType=VARCHAR},
			</if>
			<if test="detailAddress != null">
				#{detailAddress,jdbcType=VARCHAR},
			</if>
			<if test="receiver != null">
				#{receiver,jdbcType=VARCHAR},
			</if>
			<if test="phoneNumber != null">
				#{phoneNumber,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.timeuni.bean.AddressDetailExample"
		resultType="java.lang.Long">
		select count(*) from tb_address_detail
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update tb_address_detail
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.userId != null">
				user_id = #{record.userId,jdbcType=INTEGER},
			</if>
			<if test="record.areaId != null">
				area_id = #{record.areaId,jdbcType=VARCHAR},
			</if>
			<if test="record.detailAddress != null">
				detail_address =
				#{record.detailAddress,jdbcType=VARCHAR},
			</if>
			<if test="record.receiver != null">
				receiver = #{record.receiver,jdbcType=VARCHAR},
			</if>
			<if test="record.phoneNumber != null">
				phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update tb_address_detail
		set id = #{record.id,jdbcType=INTEGER},
		user_id = #{record.userId,jdbcType=INTEGER},
		area_id =
		#{record.areaId,jdbcType=VARCHAR},
		detail_address =
		#{record.detailAddress,jdbcType=VARCHAR},
		receiver =
		#{record.receiver,jdbcType=VARCHAR},
		phone_number =
		#{record.phoneNumber,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.timeuni.bean.AddressDetail">
		update tb_address_detail
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="areaId != null">
				area_id = #{areaId,jdbcType=VARCHAR},
			</if>
			<if test="detailAddress != null">
				detail_address = #{detailAddress,jdbcType=VARCHAR},
			</if>
			<if test="receiver != null">
				receiver = #{receiver,jdbcType=VARCHAR},
			</if>
			<if test="phoneNumber != null">
				phone_number = #{phoneNumber,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.timeuni.bean.AddressDetail">
		update tb_address_detail
		set user_id =
		#{userId,jdbcType=INTEGER},
		area_id = #{areaId,jdbcType=VARCHAR},
		detail_address = #{detailAddress,jdbcType=VARCHAR},
		receiver =
		#{receiver,jdbcType=VARCHAR},
		phone_number =
		#{phoneNumber,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- 以下为新增sql -->

	<!-- public List<AddressDetail> selectAllAdressByUserId(Integer userId); -->
	<select id="selectAllAdressByUserId" resultMap="BaseResultMap">
		SELECT
		ad.receiver,
		CONCAT(
		p.province,
		c.city,
		a.area,
		ad.detail_address
		) detail_address,
		ad.phone_number
		FROM
		tb_address_detail ad
		INNER JOIN tb_area a ON ad.area_id = a.area_id
		INNER JOIN tb_city c ON a.city_id = c.city_id
		INNER JOIN tb_province p ON c.province_id = p.province_id
		WHERE
		ad.user_id = #{userId}
	</select>
</mapper>